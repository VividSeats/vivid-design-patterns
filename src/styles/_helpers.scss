$displayUtilities: block, inline, inline-block, none;
@mixin displayUtility($size) {
    @each $display in $displayUtilities {
        .display-#{$display}-#{$size} {
            display: $display !important;
        }
    }
}
@include size-min-tablet {
    @include displayUtility(min-tablet);
}
@include size-min-desktop {
    @include displayUtility(min-desktop);
}
@include size-min-desktopXL {
    @include displayUtility(min-desktopXL);
}
@include size-only-mobile {
    @include displayUtility(mobile);
}
@include size-only-tablet {
    @include displayUtility(tablet);
}
@include size-only-desktop {
    @include displayUtility(desktop);
}

// Spacing Helpers
$spacingDirections: null, t, r, b, l;
$spacingSizes: 2xs $sizing-2XS, xs $sizing-XS, sm $sizing-SM, md $sizing-MD, lg $sizing-LG, xl $sizing-XL, 2xl $sizing-2XL, 3xl $sizing-3XL,
    4xl $sizing-4XL, 5xl $sizing-5XL, 6xl $sizing-6XL;
$spacingTypes: m, p;

@each $type in $spacingTypes {
    .#{$type} {
        @each $direction in $spacingDirections {
            &#{$direction} {
                @each $spacingSize in $spacingSizes {
                    $size: nth($spacingSize, 2);
                    $settings: ($size !important);
                    @if $direction == t {
                        $settings: ($size !important) null null null;
                    }
                    @if $direction == r {
                        $settings: null ($size !important) null null;
                    }
                    @if $direction == b {
                        $settings: null null ($size !important) null;
                    }
                    @if $direction == l {
                        $settings: null null null ($size !important);
                    }

                    &-#{nth($spacingSize, 1)} {
                        @if $type == m {
                            @include margin($settings);
                        }
                        @if $type == p {
                            @include padding($settings);
                        }
                    }
                }
            }
        }
    }
}

// Borders
iframe,
img,
figure,
table {
    max-width: 100%;
}

.border {
    @include border;

    &-bottom {
        @include border(bottom);
    }
    &-left {
        @include border(left);
    }
    &-right {
        @include border(right);
    }
    &-top {
        @include border(top);
    }
}
.vp-banner {
    @include display(flex);
    @include justify-content(center);
}
.vp-inline-group {
    font-size: 0; // inline-block gap fix
}

.vp-flex-column {
    @include display(flex);
    @include flex(1);
    @include flex-direction(column);
}
.vp-flex-center {
    @include display(flex);
    @include flex-direction(column);
    @include justify-content(center);
    height: 100%;
}
