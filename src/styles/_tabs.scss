@import 'tokens';
@import 'mixins/mixins';
@import 'mixins/prefixes';

[class^='vdp-tab-bar'] {
    @include flex;
    list-style: none;
    margin: 0;
    padding-left: 0;
    padding-right: 0;

    &[class*='--centered'] {
        @include justify-content(center);
    }
    &:not([class*='--inverted']) {
        background-color: $color-white;
    }
    &[class*='--inverted'] .vdp-tab {
        color: $color-gray;

        &:hover,
        &[data-state='active'] {
            color: $color-white;
        }
    }
    @include size-min-tablet {
        &[class*='--compressed'] .vdp-tab {
            line-height: $sizing-4XL;
        }
    }
}
.vdp-tab,
.vdp-tab:link,
.vdp-tab:visited {
    @include align-self(flex-end);
    @include flex(0 0 auto);
    @include transition(all $transition-1);
    color: $text-color-muted;
    cursor: pointer;
    font-size: $font-size-SM;
    font-weight: $font-weight-bld;
    line-height: $sizing-4XL;
    overflow: hidden;
    padding: 0 $sizing-MD;
    position: relative;
    text-decoration: none;
    text-transform: uppercase;

    @include size-min-tablet {
        line-height: $font-size-6XL;
    }
    i {
        line-height: inherit !important;
        top: 3px;
    }
    &:after {
        @include position(absolute, null null 0 0);
        @include transition(all $transition-1);
        @include transform(scale(0));
        content: '';
        background: $color-brand-red;
        height: $sizing-XS;
        opacity: 0;
        transform-style: preserve-3d;
        width: 100%;
        z-index: 1;
    }
    &:hover,
    &[data-state='active'] {
        color: $text-color-default;

        &:after {
            @include transform(scale(1));
        }
    }
    &:hover:after {
        opacity: 0.8;
    }
    &[data-state='active']:after {
        opacity: 1;
    }
}

// Stretched
@include size-only-mobile {
    [class^='vdp-tab-bar'][class*='--stretched'] .vdp-tab {
        @include flex-grow(1);
        @include justify-content(center);
    }
}
