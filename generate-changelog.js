const fs = require('fs');
const gitCommits = require('git-raw-commits');
const moment = require('moment');
const writeStream = fs.createWriteStream('CHANGELOG.md');
const readStream = gitCommits({ format: '%s%n%an%n%h%n%ad', from: '4545c35', to: 'master' });

const versionRegex = /(v\d+\.\d+\.\d+)/g;
const newLineRegex = /\r?\n/;
const newLine = '\n';

writeStream.write('# CHANGELOG');
writeStream.write(newLine);
writeStream.write('##### _auto-generated by generate-changelog.js_');
writeStream.write(newLine);

readStream
    .on('data', chunk => {
        const commitString = chunk.toString();
        const [message, author, hash, dateString, empty] = commitString.split(newLineRegex);

        if (versionRegex.test(message)) {
            const date = moment(new Date(dateString)).format('MMMM Do YYYY, h:mm:ssa');

            writeStream.write(newLine);
            writeStream.write(newLine);
            writeStream.write(`### ${message} ${newLine}`);
            writeStream.write(`##### ${author} at ${date}`);
        } else if (message.includes('changelog')) {
            writeStream.write(newLine);

            const changelogRegex = new RegExp('changelog', 'ig');
            const messageWithoutChangelog = message.replace(changelogRegex, '');

            writeStream.write(
                `  - [${hash}](https://github.com/VividSeats/vivid-design-patterns/commit/${hash}): ${messageWithoutChangelog}${newLine}`
            );
        }
    })
    .on('end', () => {
        writeStream.end();
    });
